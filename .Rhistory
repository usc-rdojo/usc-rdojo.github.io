real beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'''
slm <- '
data {
int<lower=0> N;
vector[N] y;
vector[N] x;
}
parameters {
real alpha;
real beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm_fit <- stan(slm, data=stan_dat)
slm_fit <- stan(model_code, data=stan_dat)
slm_fit <- stan(model_code=slm, data=stan_dat)
is.na(d)
stan_dat <- list(N=n, x=d, y=y)
slm_fit <- stan(model_code=slm, data=stan_dat)
dim(y)
array(y)
dim(array(y))
y <- array(d %*% betas + epsilon)
stan_dat <- list(N=n, x=d, y=y)
slm_fit <- stan(model_code=slm, data=stan_dat)
stan_dat <- list(N=n, x=d, y=y, K=k)
slm <- '
data {
int<lower=0> N;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
real beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm_fit <- stan(model_code=slm, data=stan_dat)
stan_dat <- list(N=n, x=d, y=y, K=k)
slm <- '
data {
int<lower=0> N;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
real beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm <- '
data {
int<lower=0> N;
int<lower=0> K;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
real beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm_fit <- stan(model_code=slm, data=stan_dat)
summary(slm_fit)
slm_fit$summary
slm_fit
data {
int<lower=0> N;
int<lower=0> K;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
vector[K] beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm <- '
data {
int<lower=0> N;
int<lower=0> K;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
vector[K] beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
for (n in 1:N)
y[n] ~ normal(alpha + beta * x[n], sigma);
}'
slm_fit <- stan(model_code=slm, data=stan_dat)
slm <- '
data {
int<lower=0> N;
int<lower=0> K;
vector[N] y;
matrix[N,K] x;
}
parameters {
real alpha;
vector[K] beta;
real<lower=0> sigma;
}
model {
alpha ~ normal(0,10);
beta ~ normal(0,10);
sigma ~ cauchy(0,5);
y ~ normal(alpha + x * beta, sigma);
}'
slm_fit <- stan(model_code=slm, data=stan_dat)
slm_fit
betas
d <- c()
betas <- c()
sigmas <- c()
n <- 11
k <- 10
set.seed(1)
for (i in 1:k){
mu[[i]] <- rnorm(1, 0, 3)
sigma[[i]] <- rinvgamma(1, 1.5,1.5)
betas[[i]] <- rnorm(1, 0, 2)
d[[i]] <- rnorm(n, mu[i], sigma[i])
}
epsilon <- rnorm(n, 0, .5)
d <- do.call(cbind, d)
y <- array(d %*% betas + epsilon)
stan_dat <- list(N=n, x=d, y=y, K=k)
slm_fit2 <- stan(model_code=slm, data=stan_dat, fit=slm_fit)
slm_fit
slm_fit$beta
betas <- as.matrix(extract(slm_fit2))
betas
betas <- as.matrix(fit, slm_fit2)
betas <- as.matrix(slm_fit2, slm_fit2)
betas
betas <- as.data.frame(slm_fit2)
betas
names(betas)
colMeans(betas)
betas <- dplyr::select(betas, contains('beta'))
betas <- as.data.frame(slm_fit2)
betas <- dplyr::select(betas, contains('beta'))
betas <- as.data.frame(slm_fit2)
betas <- dplyr::select(betas, contains('beta'))
?dplyr::select
betas <- as.data.frame(slm_fit2)
betas <- dplyr::select(betas, dplyr::contains('beta'))
colMeans(betas)
slm_fit2
round(colMeans(betas))
round(colMeans(betas),2)
d <- c()
betas <- c()
sigmas <- c()
n <- 11
k <- 10
set.seed(1)
for (i in 1:k){
mu[[i]] <- rnorm(1, 0, 3)
sigma[[i]] <- rinvgamma(1, 1.5,1.5)
betas[[i]] <- rnorm(1, 0, 2)
d[[i]] <- rnorm(n, mu[i], sigma[i])
}
epsilon <- rnorm(n, 0, .5)
d <- do.call(cbind, d)
y <- array(d %*% betas + epsilon)
stan_dat <- list(N=n, x=d, y=y, K=k)
slm_fit2 <- stan(model_code=slm, data=stan_dat, fit=slm_fit)
betas_hat <- as.data.frame(slm_fit2)
betas_hat <- dplyr::select(betas, dplyr::contains('beta'))
betas_hat <- as.data.frame(slm_fit2)
betas_hat
betas_hat <- dplyr::select(betas_hat, dplyr::contains('beta'))
round(colMeans(betas_hat),2)
round(betas,2)
cbind(round(colMeans(betas_hat),2), round(betas,2))
cbind('est' = round(colMeans(betas_hat),2), 'true' = round(betas,2))
cbind('true' = round(betas,2), 'est' = round(colMeans(betas_hat),2))
n <- 10
set.seed(1)
for (i in 1:k){
mu[[i]] <- rnorm(1, 0, 3)
sigma[[i]] <- rinvgamma(1, 1.5,1.5)
betas[[i]] <- rnorm(1, 0, 2)
d[[i]] <- rnorm(n, mu[i], sigma[i])
}
epsilon <- rnorm(n, 0, .5)
d <- do.call(cbind, d)
y <- array(d %*% betas + epsilon)
stan_dat <- list(N=n, x=d, y=y, K=k)
d <- c()
betas <- c()
sigmas <- c()
n <- 10
k <- 10
set.seed(1)
for (i in 1:k){
mu[[i]] <- rnorm(1, 0, 3)
sigma[[i]] <- rinvgamma(1, 1.5,1.5)
betas[[i]] <- rnorm(1, 0, 2)
d[[i]] <- rnorm(n, mu[i], sigma[i])
}
epsilon <- rnorm(n, 0, .5)
d <- do.call(cbind, d)
y <- array(d %*% betas + epsilon)
stan_dat <- list(N=n, x=d, y=y, K=k)
slm_fit2 <- stan(model_code=slm, data=stan_dat, fit=slm_fit)
betas_hat <- as.data.frame(slm_fit2)
betas_hat <- dplyr::select(betas_hat, dplyr::contains('beta'))
cbind('true' = round(betas,2), 'est' = round(colMeans(betas_hat),2))
slm_fit2
betas
slm_fit2
vect=c(73, 74, 92, 98, 100, 72, 74, 85, 76, 94, 89, 73, 76, 99)
a <- 1:10
a <- 1:10
length(a)/2
mydata=read.table(file.choose(), header=T)
dim(mydata)		#100 Subjects, 11 variables
names(mydata)
mean(mydata$bmi)
sd(mydata$bmi/sqrt(nrow(mydata)))
plot(density(mydata$bmi))
abline(v=mean(mydata$bmi))
abline(v=(mean(mydata$bmi) + 2*0.6320565),col='red')
abline(v=(mean(mydata$bmi) - 2*0.6320565),col='red')
plot(density(rnorm(1000, 0, 1)))
plot(density(rnorm(100000, 0, 1)))
abline(v=0)
abline(v=2, col='red')
abline(v=-1, col='red')
plot(density(rnorm(100000, 0, 1)))
abline(v=0)
abline(v=2, col='red')
abline(v=-2, col='red')
mu=27.5
xbar=mean(mydata$bmi) #28.22
xbar
s=sd(mydata$bmi) #6.32
N=100
T = (xbar - mu) / (s/sqrt(N))
T
.25^3
alpha=0.05
alpha=0.05
df=100-1
c=qt(1-(alpha/2), df)
c
abs(T)
c
LB = xbar - c*(s/sqrt(N))
UB= xbar + c*(s/sqrt(N))
LB
UB
T
T
?qt
df
df
(1-pt(abs(T), df))
pt(abs(T), df)
pval = 2*(1-pt(abs(T), df))
pval
abs(T)
(1-pt(abs(T), df))
abs(T)
1-pt(abs(T)
)
1-pt(abs(T), df)
(1-pt(-T, df))
pt(-T, df)
pval = 2*(1-pt(abs(T), df))
pval
t.test(mydata$age, mu=56)
t.test(mydata$age, mu=52)
t.test(mydata$physhlth ,mu=10)
source(file.choose())
trimci(mydata$age, null.value=56)
library(pscl)
install.packages('countreg', repos='http://R-Forge.R-project.org')
p_load(aTSA)
library(pacman)
p_load(aTSA)
p_load(urca, vars, aod)
p_load(zoo, tseries)
p_load(pscl)
p_load(pscl)
p_load(strucchange)
library(pacman)
p_load(strucchange)
HW1=read.table(file.choose(), header=T)
head(HW1)
hw=read.table('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/in_class_materials/Lab 8/lab8hw.txt', header=T)
hist(boys)
boys = c(5,7,	3	,1,	1	,2,	4	,5,	6)
girls <- c(1,	3	,7,	7	,6,	4,	3	,5,	7	,4)
mean(boys); sd(boys)
mean(girls); sd(girls)
hist(boys)
hist(boys)
hist(girls)
t.test(boys, girls)
cholmed <- c(	-17,	 4,	 15,	 -8,	 -30,   -7,   -2	, 4)
placebo <- c(-17,	 4,	 15,	 -8,	 -30,   -7,   -2,	 4)
t.test(cholmed, placebo)
t.test(cholmed, placebo)
cholmed <- c(	-33,	-15,	  1,	 -75,  -23,   -3,	-60,	-57)
placebo <- c(-17,	 4,	 15,	 -8,	 -30,   -7,   -2,	 4)
t.test(cholmed, placebo)
?t.test
t.test(pa)
?t.test
t.test(t0, t1, paired = T)
t0 <- c(7,	7,	3,	1,	6,	5,	4,	3,	3,	4,	6,	7)
t1 <- c(2,	1,	4,	4,	1,	1,	2,	1,	6,	4,	5,	4)
t.test(t0, t1, paired = T)
boys = c(5,7,	3	,1,	1	,2,	4	,5,	6)
girls <- c(1,	3	,7,	7	,6,	4,	3	,5,	7	,4)
mean(boys); sd(boys)
mean(girls); sd(girls)
hist(boys)
hist(girls)
t.test(boys, girls)
cholmed <- c(	-33,	-15,	  1,	 -75,  -23,   -3,	-60,	-57)
placebo <- c(-17,	 4,	 15,	 -8,	 -30,   -7,   -2,	 4)
mean(cholmed); sd(cholmed)
mean(placebo); sd(placebo)
hist(cholmed)
hist(placebo)
t.test(cholmed, placebo)
t0 <- c(7,	7,	3,	1,	6,	5,	4,	3,	3,	4,	6,	7)
t1 <- c(2,	1,	4,	4,	1,	1,	2,	1,	6,	4,	5,	4)
mean(t0); sd(t0)
mean(t1); sd(t1)
hist(t0)
hist(t1)
t.test(t0, t1, paired = T)
knitr::opts_chunk$set(echo = TRUE)
hw=read.table('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/in_class_materials/Lab 8/lab8hw.txt', header=T)
summary(lm(hw$score~hw$iq))
t.test(cholmed, placebo, var.equal = F)
HW1=read.table(file.choose(), header=T)
HW1=read.table(file.choose(), header=T)
HW1
unique(HW1$Group)
names(HW1)
boxplot(Score~Group, data=HW1)
hw1.anova=aov(Score ~ factor(Group), data=HW1)
summary(hw1.anova)
HW2=read.table(file.choose(), header=T)
HW2
boxplot(germs~time, data=HW2)
hw2.anova=aov(germs~factor(time) + factor(foodtype)+ factor(time)*factor(foodtype), data=HW2)
summary(hw2.anova)
interaction.plot(HW2$time, HW2$foodtype, HW2$germs)
HW1 <- read.csv('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/in_class_materials/Lab 10/lab10hw1.txt')
head(HW1)
HW1 <- read.table('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/in_class_materials/Lab 10/lab10hw1.txt')
head(HW1)
unique(HW1$Group)
boxplot(HW1$Score ~ HW1$Group)
hw1.anova <- aov(Score ~ factor(Group), data=HW1)
summary(hw1.anova)
source('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/Rallfun-v33.txt)
source('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/Rallfun-v33.txt')
source('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/Rallfun-v33.txt')
hw1.f2l <- fac2list(HW1$Score, HW1$Group)
hw1.f2l
t1way(hw1.f2l)
HW2 <- read.table('~/Google Drive/Teaching/Psych_274_statistics_fall_17/lab_materials/lab_materials/in_class_materials/Lab 10/lab10hw2.txt')
summary(HW2)
boxplot(germs ~ time + foodtype, data=HW2)
HW2$foodtype <- as.factor(HW2$foodtype)
HW2$time <- as.factor(HW2$time)
hw2.anova <- aov(germs ~ time + foodtype + time*foodtype)
hw2.anova <- aov(germs ~ time + foodtype + time*foodtype, data=HW2)
summary(hw2.anova)
t.test
?t.test
f <- function(x){
wp = x/9
wp/10
}
x = 9
wp = x/9
WP
wp
wp/10
f <- function(x){
wp = x/9
10/wp
}
f(9.4)
x = 9.4
wp = x/9
wp
f <- function(x){
wp = x/9
10*wp
}
f(9.4)
f(5.6)
f(8.75)
f(6.3)
f(4.9)
f(9.25)
f(6.48)
f(.62)
f(5.6)
f(1.6)
f(9.3)
f(7.73)
f(8.5)
f(2.7)
f(1.5)
f(3.4)
f(3)
f(6.4)
f(8.4)
f(4.7)
f(8.4)
f(8.8)
f(8)
f(3.9)
f(3.4)
f(2.7)
f(8.5)
f(5)
f(8.5)
f(8.6)
f(1.8)
f(7.2)
f(5.55)
f(2.7)
f(7.7)
f(7.725)
f(6.35)
setwd("~/offline_research/git_repos/usc-rdojo.github.io/_layouts")
setwd("~/offline_research/git_repos/usc-rdojo.github.io")
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
library(knitr)
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
library(rmarkdown)
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2017-05-17-hello.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2018-01-02-getting-ready.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
render(input = "_source/2018-01-02-getting-ready.Rmd", output_dir = "_posts", output_format = md_document(preserve_yaml = TRUE))
getwd()
getwd()
unlink('post_code/2018-01-04-creating-an-r-notebook_cache', recursive = TRUE)
unlink('post_code/2018-01-04-creating-an-r-notebook_cache', recursive = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
rstudioapi::getActiveDocumentContext()$path)
rstudioapi::getActiveDocumentContext()$path
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
